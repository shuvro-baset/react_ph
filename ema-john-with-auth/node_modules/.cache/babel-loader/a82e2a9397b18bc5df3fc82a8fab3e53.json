{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport initializeAuthentication from '../Firebase/firebase.init';\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n\n  const signInUsingGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n\n  const logOut = () => {\n    signOut(auth).then(() => {\n      setUser({});\n    });\n  }; // observe whether user auth state changed or not\n\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return {\n    user,\n    signInUsingGoogle,\n    logOut\n  };\n};\n\n_s(useFirebase, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["F:/web design/React/react_ph/ema-john-with-auth/src/hooks/useFirebase.js"],"names":["useState","useEffect","getAuth","signInWithPopup","GoogleAuthProvider","onAuthStateChanged","signOut","initializeAuthentication","useFirebase","user","setUser","auth","googleProvider","signInUsingGoogle","logOut","then","unsubscribe"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,kBAAvD,EAA2EC,OAA3E,QAA0F,eAA1F;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AAEAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMW,IAAI,GAAGT,OAAO,EAApB;AACA,QAAMU,cAAc,GAAG,IAAIR,kBAAJ,EAAvB;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC5B,WAAOV,eAAe,CAACQ,IAAD,EAAOC,cAAP,CAAtB;AACH,GAFD;;AAIA,QAAME,MAAM,GAAG,MAAM;AACjBR,IAAAA,OAAO,CAACK,IAAD,CAAP,CACKI,IADL,CACU,MAAM;AACRL,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAHL;AAIH,GALD,CAVsB,CAiBtB;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,WAAW,GAAGX,kBAAkB,CAACM,IAAD,EAAQF,IAAD,IAAU;AACnD,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ,KAJqC,CAAtC;AAKA,WAAOO,WAAP;AACH,GAPQ,EAON,EAPM,CAAT;AASA,SAAO;AACHP,IAAAA,IADG;AAEHI,IAAAA,iBAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CAhCD;;GAAMN,W;;AAkCN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport initializeAuthentication from '../Firebase/firebase.init';\r\n\r\ninitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n\r\n    const auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n\r\n    const signInUsingGoogle = () => {\r\n        return signInWithPopup(auth, googleProvider);\r\n    }\r\n\r\n    const logOut = () => {\r\n        signOut(auth)\r\n            .then(() => {\r\n                setUser({})\r\n            })\r\n    }\r\n\r\n    // observe whether user auth state changed or not\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user);\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n    return {\r\n        user,\r\n        signInUsingGoogle,\r\n        logOut\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}